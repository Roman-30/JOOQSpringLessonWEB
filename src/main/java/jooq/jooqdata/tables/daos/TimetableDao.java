/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.daos;


import java.util.List;

import jooqdata.tables.Timetable;
import jooqdata.tables.records.TimetableRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimetableDao extends DAOImpl<TimetableRecord, jooqdata.tables.pojos.Timetable, Long> {

    /**
     * Create a new TimetableDao without any configuration
     */
    public TimetableDao() {
        super(Timetable.TIMETABLE, jooqdata.tables.pojos.Timetable.class);
    }

    /**
     * Create a new TimetableDao with an attached configuration
     */
    public TimetableDao(Configuration configuration) {
        super(Timetable.TIMETABLE, jooqdata.tables.pojos.Timetable.class, configuration);
    }

    @Override
    public Long getId(jooqdata.tables.pojos.Timetable object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Timetable.TIMETABLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchById(Long... values) {
        return fetch(Timetable.TIMETABLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooqdata.tables.pojos.Timetable fetchOneById(Long value) {
        return fetchOne(Timetable.TIMETABLE.ID, value);
    }

    /**
     * Fetch records that have <code>room_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchRangeOfRoomNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Timetable.TIMETABLE.ROOM_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>room_number IN (values)</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchByRoomNumber(Integer... values) {
        return fetch(Timetable.TIMETABLE.ROOM_NUMBER, values);
    }

    /**
     * Fetch records that have <code>pare_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchRangeOfPareNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Timetable.TIMETABLE.PARE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pare_number IN (values)</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchByPareNumber(Integer... values) {
        return fetch(Timetable.TIMETABLE.PARE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>lecture_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchRangeOfLectureId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Timetable.TIMETABLE.LECTURE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lecture_id IN (values)</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchByLectureId(Long... values) {
        return fetch(Timetable.TIMETABLE.LECTURE_ID, values);
    }

    /**
     * Fetch records that have <code>subject_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchRangeOfSubjectId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Timetable.TIMETABLE.SUBJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subject_id IN (values)</code>
     */
    public List<jooqdata.tables.pojos.Timetable> fetchBySubjectId(Long... values) {
        return fetch(Timetable.TIMETABLE.SUBJECT_ID, values);
    }
}
