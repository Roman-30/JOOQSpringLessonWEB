/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import jooqdata.tables.Timetable;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimetableRecord extends UpdatableRecordImpl<TimetableRecord> implements Record5<Long, Integer, Integer, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.timetable.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.timetable.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.timetable.room_number</code>.
     */
    public void setRoomNumber(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.timetable.room_number</code>.
     */
    public Integer getRoomNumber() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.timetable.pare_number</code>.
     */
    public void setPareNumber(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.timetable.pare_number</code>.
     */
    public Integer getPareNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.timetable.lecture_id</code>.
     */
    public void setLectureId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.timetable.lecture_id</code>.
     */
    public Long getLectureId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.timetable.subject_id</code>.
     */
    public void setSubjectId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.timetable.subject_id</code>.
     */
    public Long getSubjectId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Integer, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, Integer, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Timetable.TIMETABLE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Timetable.TIMETABLE.ROOM_NUMBER;
    }

    @Override
    public Field<Integer> field3() {
        return Timetable.TIMETABLE.PARE_NUMBER;
    }

    @Override
    public Field<Long> field4() {
        return Timetable.TIMETABLE.LECTURE_ID;
    }

    @Override
    public Field<Long> field5() {
        return Timetable.TIMETABLE.SUBJECT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getRoomNumber();
    }

    @Override
    public Integer component3() {
        return getPareNumber();
    }

    @Override
    public Long component4() {
        return getLectureId();
    }

    @Override
    public Long component5() {
        return getSubjectId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getRoomNumber();
    }

    @Override
    public Integer value3() {
        return getPareNumber();
    }

    @Override
    public Long value4() {
        return getLectureId();
    }

    @Override
    public Long value5() {
        return getSubjectId();
    }

    @Override
    public TimetableRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TimetableRecord value2(Integer value) {
        setRoomNumber(value);
        return this;
    }

    @Override
    public TimetableRecord value3(Integer value) {
        setPareNumber(value);
        return this;
    }

    @Override
    public TimetableRecord value4(Long value) {
        setLectureId(value);
        return this;
    }

    @Override
    public TimetableRecord value5(Long value) {
        setSubjectId(value);
        return this;
    }

    @Override
    public TimetableRecord values(Long value1, Integer value2, Integer value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TimetableRecord
     */
    public TimetableRecord() {
        super(Timetable.TIMETABLE);
    }

    /**
     * Create a detached, initialised TimetableRecord
     */
    public TimetableRecord(Long id, Integer roomNumber, Integer pareNumber, Long lectureId, Long subjectId) {
        super(Timetable.TIMETABLE);

        setId(id);
        setRoomNumber(roomNumber);
        setPareNumber(pareNumber);
        setLectureId(lectureId);
        setSubjectId(subjectId);
    }

    /**
     * Create a detached, initialised TimetableRecord
     */
    public TimetableRecord(jooqdata.tables.pojos.Timetable value) {
        super(Timetable.TIMETABLE);

        if (value != null) {
            setId(value.getId());
            setRoomNumber(value.getRoomNumber());
            setPareNumber(value.getPareNumber());
            setLectureId(value.getLectureId());
            setSubjectId(value.getSubjectId());
        }
    }
}
