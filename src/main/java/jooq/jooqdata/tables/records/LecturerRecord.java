/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import jooqdata.tables.Lecturer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LecturerRecord extends UpdatableRecordImpl<LecturerRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lecturer.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lecturer.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lecturer.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lecturer.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.lecturer.surname</code>.
     */
    public void setSurname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lecturer.surname</code>.
     */
    public String getSurname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lecturer.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lecturer.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.lecturer.phone</code>.
     */
    public void setPhone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lecturer.phone</code>.
     */
    public String getPhone() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Lecturer.LECTURER.ID;
    }

    @Override
    public Field<String> field2() {
        return Lecturer.LECTURER.NAME;
    }

    @Override
    public Field<String> field3() {
        return Lecturer.LECTURER.SURNAME;
    }

    @Override
    public Field<String> field4() {
        return Lecturer.LECTURER.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return Lecturer.LECTURER.PHONE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getSurname();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getPhone();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getSurname();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getPhone();
    }

    @Override
    public LecturerRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LecturerRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public LecturerRecord value3(String value) {
        setSurname(value);
        return this;
    }

    @Override
    public LecturerRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public LecturerRecord value5(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public LecturerRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LecturerRecord
     */
    public LecturerRecord() {
        super(Lecturer.LECTURER);
    }

    /**
     * Create a detached, initialised LecturerRecord
     */
    public LecturerRecord(Long id, String name, String surname, String email, String phone) {
        super(Lecturer.LECTURER);

        setId(id);
        setName(name);
        setSurname(surname);
        setEmail(email);
        setPhone(phone);
    }

    /**
     * Create a detached, initialised LecturerRecord
     */
    public LecturerRecord(jooqdata.tables.pojos.Lecturer value) {
        super(Lecturer.LECTURER);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setSurname(value.getSurname());
            setEmail(value.getEmail());
            setPhone(value.getPhone());
        }
    }
}
